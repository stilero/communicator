<?php
define('_JEXEC', 1);
require_once '../communicator.php';
require_once '../link.php';
require_once '../backlinkvalidator.php';
require_once 'backlinkvalidatormockup.php';
require_once 'HTMLHelper.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-27 at 11:05:23.
 */
class BacklinkValidatorTest extends PHPUnit_Framework_TestCase {

    /**
     * @var BacklinkValidator
     */
    protected $object;
    protected $link;
    protected $linker;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->link = new Link('http://www.stilero.com', 'Stilero Web Design');
        $this->linker = new Link ('http://www.stilero.com', 'Stilero Web Design');
        $this->object = new BacklinkValidatorMockup($this->link, $this->linker);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        unset($this->object);
    }

    /**
     * @covers BacklinkValidator::check
     * @todo   Implement testCheck().
     */
    public function testCheck() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
    
    public function testFoundLink(){
        $html = HTMLGeneratorHelper::htmlWithKnownLink($this->link->href, $this->link->text);
        $this->_response = $html;
        $this->object->_response = $html;
        $this->object->findBackLinks();
        $isFound = $this->object->isFound();
        $this->assertTrue($isFound);
    }
    
    public function testFoundLinkWithNoFollow(){
        $html = HTMLGeneratorHelper::htmlWithKnownLink($this->link->href, $this->link->text, TRUE);
        $this->_response = $html;
        $this->object->_response = $html;
        $this->object->findBackLinks();
        $isFound = $this->object->isFound();
        $this->assertFalse($isFound);
    }
    
    public function testNotFoundLink(){
        $html = HTMLGeneratorHelper::htmlWithUnknownLinks();
        $this->_response = $html;
        $this->object->_response = $html;
        $this->object->findBackLinks();
        $isFound = $this->object->isFound();
        $this->assertFalse($isFound);
    }
    
    public function testFoundLinkWithQuery(){
        $this->link->href = $this->link->href.'/mywebsite/?option=com_option&link=3';
        $html = HTMLGeneratorHelper::htmlWithKnownLink($this->link->href, $this->link->text);
        $this->_response = $html;
        $this->object->_response = $html;
        $this->object->findBackLinks();
        $isFound = $this->object->isFound();
        $this->assertTrue($isFound);
    }
    
    public function testFoundLinkWithNonUTF8InText(){
        $this->link->href = 'http://www.stilero.com';
        $this->link->text = 'Min hemsida med åäö';
        $html = HTMLGeneratorHelper::htmlWithKnownLink($this->link->href, $this->link->text);
        $this->_response = $html;
        $this->object->_response = $html;
        $this->object->findBackLinks();
        $isFound = $this->object->isFound();
        $this->assertTrue($isFound);
    }

    /**
     * @covers BacklinkValidator::isFound
     * @todo   Implement testIsFound().
     */
    public function testIsFound() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BacklinkValidator::getErrors
     * @todo   Implement testGetErrors().
     */
    public function testGetErrors() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BacklinkValidator::getErrorCodeWrongAnchor
     * @todo   Implement testGetErrorCodeWrongAnchor().
     */
    public function testGetErrorCodeWrongAnchor() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BacklinkValidator::getErrorCodeNoFollow
     * @todo   Implement testGetErrorCodeNoFollow().
     */
    public function testGetErrorCodeNoFollow() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers BacklinkValidator::getErrorCodeNotFound
     * @todo   Implement testGetErrorCodeNotFound().
     */
    public function testGetErrorCodeNotFound() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
